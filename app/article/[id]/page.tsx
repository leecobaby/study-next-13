import MarkDwon from 'markdown-to-jsx'
import { format } from 'date-fns'
import { prisma } from '@/lib/prisma'
import { Avatar } from '@/components/Client'
import { EditLink } from './page-client'
import styles from './index.module.scss'
import 'github-markdown-css'

interface Props {
  params: { id: string }
}

export async function generateMetadata(props: Props) {
  const { params } = props
  // const article = await getArticleDetail(Number(params.id))
  return {
    title: 'Blog',
    description: 'Generated by create next app | Blog',
  }
}

export default async function ArticleDetail({ params }: Props) {
  const article = await getArticleDetail(Number(params.id))
  const user = article?.user
  return (
    <div className="content-layout">
      <h2 className={styles.title}>{article?.title}</h2>
      <div className={styles.user}>
        <Avatar src={user?.avatar} size={50} />
        <div className={styles.info}>
          <div className={styles.name}>{user?.nickname}</div>
          <div className={styles.date}>
            <div>{format(article?.update_time!, 'yyyy-MM-dd hh:mm:ss')}</div>
            <div>阅读 {article?.views}</div>
            <EditLink id={user?.id} />
          </div>
        </div>
      </div>
      <MarkDwon className="markdown-body">{article?.content!}</MarkDwon>
    </div>
  )
}

async function getArticleDetail(id: number) {
  const article = await prisma.article.update({
    where: {
      id,
    },
    include: {
      user: true,
    },
    data: {
      views: {
        increment: 1,
      },
    },
  })
  return article
}
