generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  nickname   String?    @db.VarChar(255)
  avatar     String?    @db.VarChar(255)
  job        String?    @db.VarChar(255)
  introduce  String?    @db.VarChar(255)
  articles   Article[]
  comments   Comment[]
  user_auths UserAuth[]

  @@map("forum_users")
}

model UserAuth {
  id            Int     @id @default(autoincrement())
  user_id       Int?
  identity_type String? @db.VarChar(255)
  identifier    String? @db.VarChar(255)
  credential    String? @db.VarChar(255)
  user          User?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user")

  @@index([user_id], map: "user")
  @@map("forum_user_auths")
}

model Article {
  id          Int       @id @default(autoincrement())
  title       String?   @db.VarChar(255)
  content     String?   @db.Text
  views       Int?
  is_delete   Boolean?  @db.Bit(1)
  create_time DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  comments    Comment[]
  user_id     Int?
  user        User?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "article")

  @@index([user_id], map: "article")
  @@map("forum_articles")
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String?   @db.Text
  create_time DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  article_id  Int?
  article     Article?  @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_id     Int?
  user        User?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([article_id], map: "forum_comments_article_id_fkey")
  @@index([user_id], map: "forum_comments_user_id_fkey")
  @@map("forum_comments")
}
